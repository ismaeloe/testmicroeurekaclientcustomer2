#No spring.config.import property has been defined
#Action:
#Add a spring.config.import=configserver: property to your configuration.
#If configuration is not required add spring.config.import=optional:configserver: instead.
#To disable this check, set spring.cloud.config.enabled=false or 
#NO EXISTE spring.cloud.config.import-check.enabled=false.

#FALTA POSTMAN TEST
#FALTA SPRING SECURITY
#FALTA LOMBOOK
#FALTA Trasform a application.yml
#FALTA BootStrap.yml

server.port: 8092
server.error.include-message=always
server.error.include-binding-errors: always

spring.application.name= customer-service
spring.application.admin.enabled: true

eureka.client.register-with-eureka: true
eureka.client.fetch-registry: true
eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/
#o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname
#eureka.instance.hostname: localhost

# Logging
#logging.file=customer.log  DEPRECATED
logging.file.name=/tmp/customer2.log
logging.pattern.console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"

# Spring Security default user name and password
#spring.security.user.name=actuator
#spring.security.user.password=actuator
#spring.security.user.roles=ACTUATOR_ADMIN

# INFO ENDPOINT CONFIGURATION
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# SHUTDOWN ENDPOINT (ShutdownEndpoint)
management.endpoint.shutdown.enabled=true

# HEALTH ENDPOINT
management.endpoint.health.show-details=always

# ENDPOINTS WEB CONFIGURATION
#management.endpoints.web.base-path=
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include= "*"

# To See H2 Console in Browser:
# Enabling H2 Console http://localhost:8092/h2-console
spring.h2.console.enabled: true
#spring.h2.console.path=/h2
# ===============================
# DB
# ===============================

spring.datasource.url= jdbc:h2:mem:customerDB;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName: org.h2.Driver
#deprecate, update to spring.sql.init.platform
#platform: h2
spring.datasource.username= sa
spring.datasource.password=

spring.sql.init.schema-locations=
spring.sql.init.data-locations=classpath:data-h2.sql

#This will ensure that script-based initialization is performed using schema.sql and data.sql directly.
#spring.jpa.hibernate.ddl-auto=none  PARA que Spring utilice schema-locations 

spring.sql.init.platform: h2
#disable this default behavior by setting:
#embedded default
#spring.datasource.initialization-mode=always  DEPRECATED 
spring.sql.init.mode= always
#spring.sql.init.mode=never  embedded

# ===============================
# JPA / HIBERNATE
# ===============================
#to have both Hibernate automatic schema generation in conjugation with script-based schema creation and data population
#This will ensure, that after Hibernate schema creation is performed
# then additionally schema.sql is read for any additional schema changes and data.sql is executed to populate the database
spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql= true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto= update 
#ddl-auto: create
#validate: validate the schema, makes no changes to the database.
#update: update the schema.
#create: creates the schema, destroying previous data.
#create-drop: drop the schema at the end of the session
#none: Turns Off DDL Generation

spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.show_sql: true
spring.jpa.properties.hibernate.use_sql_comments: false
spring.jpa.properties.hibernate.format_sql: false

# This is for FlyWay configuration
#spring.flyway.url=jdbc:h2:mem:testdb
#spring.flyway.schemas=testdb
#spring.flyway.user=vslala
#spring.flyway.password=simplepass